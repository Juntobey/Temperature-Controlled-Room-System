#include <math.h>
#include <LiquidCrystal_I2C.h>
const int thermistor_output = A1;
int thermistor_adc_val;
double output_voltage, thermistor_resistance, therm_res_ln, tempe;
LiquidCrystal_I2C lcd(0x27,16,2); // set the LCD address to 0x27 for a 16 chars and 2 line display
const int analogPin = A0;
void setup() {
Serial.begin(9600); /* Define baud rate for serial communication */
pinMode(A0, OUTPUT);
}
void loop() {
thermistor_adc_val = analogRead(thermistor_output);
output_voltage = ( (thermistor_adc_val * 5.0) / 1023.0 );
thermistor_resistance = ( ( 5 * ( 10.0 / output_voltage ) ) - 10 ); /* Resistance in kilo ohms */
thermistor_resistance = thermistor_resistance * 1000 ; /* Resistance in ohms */
therm_res_ln = log(thermistor_resistance);
/* Steinhart-Hart Thermistor Equation: */
/* Temperature in Kelvin = 1 / (A + B[ln(R)] + C[ln(R)]^3) */
/* where A = 0.001129148, B = 0.000234125 and C = 8.76741*10^-8 */
tempe = ( 1 / ( 0.001129148 + ( 0.000234125 * therm_res_ln ) + ( 0.0000000876741 * therm_res_ln 
* therm_res_ln * therm_res_ln ) ) ); /* Temperature in Kelvin */
tempe = tempe- 273.15; /* Temperature in degree Celsius */
Serial.print("Temperature in degree Celsius = ");
Serial.print(tempe);
lcd.init();
lcd.clear(); 
lcd.backlight(); // Make sure backlight is on
// Prints temperature message to the LCD I2C
lcd.setCursor(2,0); //Set cursor to character 2 on line 0
lcd.print("Degrees in C");
lcd.setCursor(2,1); //Move cursor to character 2 on line 1
lcd.print(tempe);
delay(5);
if (temperature< 20){
digitalWrite(A0,HIGH)
;}
if (temperature > 25) {
digitalWrite(A0, LOW);
}
}
